================================================================================
JOB STARTED: Sat Apr 19 12:34:04 PM EDT 2025
NODE: biomix14.dbi.local
SCRIPT /var/spool/slurm/d/job1014473/slurm_script:
#!/bin/bash
#SBATCH --job-name=trimming
#SBATCH --mem=32G
#SBATCH --cpus-per-task=16

### SCRIPT TRIMS RAW SEQUENCE DATA
### SOFTWARE USED: TrimGalore!, cutadapt, FastQC

##JOB LOG HEADER - Puts a copy of this script &  other debugging info in "slurm.out"
  perl -E 'say"="x80'; echo "JOB STARTED: $(date)"; echo "NODE: $(hostname)"; echo "SCRIPT ${0}:"; cat $0; perl -E 'say"="x80'

## SOFTWARE REQUIREMENTS
  export PATH=$PATH:/usr/local/FastQC

## PRIMARY VARIABLES - commonly need to change                                                    # TIP: ${HOME} inserts your home directory
  FASTQ_IN="/home/assmith/project_1/raw_data/stomach/stomach_3b.s.fastq.gz"     # FASTQ FILE LOCATION
  OUTDIR="/home/assmith/project_1/outfiles"                                               # OUTPUT DIRECTORY

## SECONDARY VARIABLES - rarely need to change
  MIN_LEN=40            # MINIMUM READ LENGTH TO KEEP
  MIN_QUAL=28           # MIN QUAL SCORE (PHRED) TO TRIM
  CPU=4                 # CPU CORES - TG oddly uses 4x this # - make sure #SBATCH requests enough (e.g. 16 for 4)

## COMMAND(s) TO RUN
  mkdir -p ${OUTDIR}    # MAKE SURE OUTPUT DIRECTORY EXISTS
  cd ${OUTDIR}          # CHANGE TO OUTPUT DIRECTORY

## Use _TrimGalore!_ to remove low quality sequences and adapters using _cutadapt_
 # It will also rerun _FastQC_ so you can see how the trimming worked...
    trim_galore \
      --length ${MIN_LEN} \
      --quality ${MIN_QUAL} \
      --cores ${CPU} \
      --fastqc \
      --fastqc_args "--threads ${SLURM_CPUS_PER_TASK}" \
      ${FASTQ_IN}

## JOB CLEANUP
  perl -E 'say"="x80'; echo "JOB COMPLETED: $(date)"; perl -E 'say"="x80'
================================================================================
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
Cutadapt seems to be using Python 3! Proceeding with multi-core enabled Cutadapt using 4 cores
pigz 2.7
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 4 cores

Proceeding with 'pigz -p 4' for decompression
To decrease CPU usage of decompression, please install 'igzip' and run again

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)



AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> /home/assmith/project_1/raw_data/stomach/stomach_3b.s.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Illumina	172362	AGATCGGAAGAGC	1000000	17.24
Nextera	10	CTGTCTCTTATA	1000000	0.00
smallRNA	7	TGGAATTCTCGG	1000000	0.00
Using Illumina adapter for trimming (count: 172362). Second best hit was Nextera (count: 10)

Writing report to 'stomach_3b.s.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: /home/assmith/project_1/raw_data/stomach/stomach_3b.s.fastq.gz
Trimming mode: single-end
Trim Galore version: 0.6.10
Cutadapt version: 4.4
Python version: 3.10.10
Number of cores used for trimming: 4
Quality Phred score cutoff: 28
Quality encoding type selected: ASCII+33
Adapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length before a sequence gets removed: 40 bp
Running FastQC on the data once trimming has completed
Running FastQC with the following extra arguments: '--threads 16'
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 4
Writing final adapter and quality trimmed output to stomach_3b.s_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 28') and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file /home/assmith/project_1/raw_data/stomach/stomach_3b.s.fastq.gz <<< 
10000000 sequences processed
20000000 sequences processed
This is cutadapt 4.4 with Python 3.10.10
Command line parameters: -j 4 -e 0.1 -q 28 -O 1 -a AGATCGGAAGAGC /home/assmith/project_1/raw_data/stomach/stomach_3b.s.fastq.gz
Processing single-end reads on 4 cores ...
Finished in 191.505 s (9.575 Âµs/read; 6.27 M reads/minute).

=== Summary ===

Total reads processed:              20,000,000
Reads with adapters:                 9,548,704 (47.7%)
Reads written (passing filters):    20,000,000 (100.0%)

Total basepairs processed: 2,020,000,000 bp
Quality-trimmed:             126,179,004 bp (6.2%)
Total written (filtered):  1,774,592,988 bp (87.9%)

=== Adapter 1 ===

Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 9548704 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-13 bp: 1

Bases preceding removed adapters:
  A: 24.5%
  C: 31.2%
  G: 28.4%
  T: 14.4%
  none/other: 1.6%

Overview of removed sequences
length	count	expect	max.err	error counts
1	3406448	5000000.0	0	3406448
2	1354775	1250000.0	0	1354775
3	373706	312500.0	0	373706
4	168960	78125.0	0	168960
5	125329	19531.2	0	125329
6	152845	4882.8	0	152845
7	111114	1220.7	0	111114
8	120713	305.2	0	120713
9	155988	76.3	0	155530 458
10	91474	19.1	1	90431 1043
11	83739	4.8	1	82592 1147
12	95425	1.2	1	94319 1106
13	106476	0.3	1	105150 1326
14	100794	0.3	1	99336 1458
15	107046	0.3	1	105474 1572
16	106130	0.3	1	104377 1753
17	149953	0.3	1	147769 2184
18	118984	0.3	1	117174 1810
19	57005	0.3	1	55683 1322
20	95466	0.3	1	94020 1446
21	83385	0.3	1	81836 1549
22	85522	0.3	1	84012 1510
23	90230	0.3	1	88525 1705
24	100345	0.3	1	98397 1948
25	94071	0.3	1	92208 1863
26	73732	0.3	1	72091 1641
27	104184	0.3	1	101895 2289
28	106048	0.3	1	103542 2506
29	99269	0.3	1	96523 2746
30	134029	0.3	1	131660 2369
31	44238	0.3	1	42566 1672
32	92457	0.3	1	90664 1793
33	67348	0.3	1	65442 1906
34	80787	0.3	1	78955 1832
35	61919	0.3	1	60107 1812
36	76041	0.3	1	73814 2227
37	85532	0.3	1	82775 2757
38	89368	0.3	1	85697 3671
39	81911	0.3	1	77748 4163
40	96648	0.3	1	89655 6993
41	132078	0.3	1	127772 4306
42	69377	0.3	1	67729 1648
43	12545	0.3	1	11903 642
44	19506	0.3	1	18889 617
45	35453	0.3	1	34179 1274
46	55358	0.3	1	54408 950
47	17267	0.3	1	16460 807
48	33418	0.3	1	32649 769
49	34517	0.3	1	33458 1059
50	29343	0.3	1	28459 884
51	32781	0.3	1	31582 1199
52	28823	0.3	1	26904 1919
53	26418	0.3	1	25726 692
54	4451	0.3	1	3930 521
55	5319	0.3	1	4938 381
56	10506	0.3	1	9386 1120
57	12217	0.3	1	11589 628
58	4922	0.3	1	4243 679
59	8565	0.3	1	7848 717
60	6252	0.3	1	5675 577
61	3951	0.3	1	3396 555
62	5177	0.3	1	3271 1906
63	5910	0.3	1	2843 3067
64	3276	0.3	1	2421 855
65	2136	0.3	1	1232 904
66	2656	0.3	1	1303 1353
67	3765	0.3	1	1453 2312
68	7346	0.3	1	1831 5515
69	7982	0.3	1	2715 5267
70	9603	0.3	1	2445 7158
71	14599	0.3	1	2770 11829
72	27239	0.3	1	3950 23289
73	32294	0.3	1	6518 25776
74	8349	0.3	1	6620 1729
75	488	0.3	1	309 179
76	67	0.3	1	29 38
77	38	0.3	1	9 29
78	21	0.3	1	2 19
79	20	0.3	1	6 14
80	24	0.3	1	4 20
81	33	0.3	1	12 21
82	38	0.3	1	13 25
83	37	0.3	1	19 18
84	39	0.3	1	22 17
85	19	0.3	1	6 13
86	29	0.3	1	14 15
87	34	0.3	1	21 13
88	25	0.3	1	16 9
89	29	0.3	1	14 15
90	30	0.3	1	16 14
91	31	0.3	1	11 20
92	61	0.3	1	22 39
93	31	0.3	1	8 23
94	44	0.3	1	5 39
95	45	0.3	1	9 36
96	75	0.3	1	15 60
97	124	0.3	1	22 102
98	266	0.3	1	47 219
99	483	0.3	1	69 414
100	1266	0.3	1	220 1046
101	2474	0.3	1	389 2085

RUN STATISTICS FOR INPUT FILE: /home/assmith/project_1/raw_data/stomach/stomach_3b.s.fastq.gz
=============================================
20000000 sequences processed in total
Sequences removed because they became shorter than the length cutoff of 40 bp:	994093 (5.0%)


  >>> Now running FastQC on the data <<<

Started analysis of stomach_3b.s_trimmed.fq.gz
Approx 5% complete for stomach_3b.s_trimmed.fq.gz
Approx 10% complete for stomach_3b.s_trimmed.fq.gz
Approx 15% complete for stomach_3b.s_trimmed.fq.gz
Approx 20% complete for stomach_3b.s_trimmed.fq.gz
Approx 25% complete for stomach_3b.s_trimmed.fq.gz
Approx 30% complete for stomach_3b.s_trimmed.fq.gz
Approx 35% complete for stomach_3b.s_trimmed.fq.gz
Approx 40% complete for stomach_3b.s_trimmed.fq.gz
Approx 45% complete for stomach_3b.s_trimmed.fq.gz
Approx 50% complete for stomach_3b.s_trimmed.fq.gz
Approx 55% complete for stomach_3b.s_trimmed.fq.gz
Approx 60% complete for stomach_3b.s_trimmed.fq.gz
Approx 65% complete for stomach_3b.s_trimmed.fq.gz
Approx 70% complete for stomach_3b.s_trimmed.fq.gz
Approx 75% complete for stomach_3b.s_trimmed.fq.gz
Approx 80% complete for stomach_3b.s_trimmed.fq.gz
Approx 85% complete for stomach_3b.s_trimmed.fq.gz
Approx 90% complete for stomach_3b.s_trimmed.fq.gz
Approx 95% complete for stomach_3b.s_trimmed.fq.gz
Analysis complete for stomach_3b.s_trimmed.fq.gz
================================================================================
JOB COMPLETED: Sat Apr 19 12:39:11 PM EDT 2025
================================================================================
